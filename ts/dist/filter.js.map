{"version":3,"file":"filter.js","sources":["../src/filter.ts"],"sourcesContent":["/// <reference path='./types/types.d.ts' />\n\nimport Complex from './complex';\nimport {diagonal, round, floor, ceil} from './math';\n\n// tslint:disable:no-bitwise prefer-object-spread\n\nconst {PI, exp, min, max, imul, fround, log, log2} = Math;\n\nconst parseFilterInput = (\n  input: number | Dimensions | Data<any>,\n): {mode: 'render' | 'filter'; dimensions: Dimensions; data?: Data<any>} => {\n  if (typeof input === 'number') input = [input, input];\n  if (input.length === 1) input = [input[0], input[0]];\n  const mode = input.length === 2 ? 'render' : 'filter';\n  return mode === 'render'\n    ? {mode, dimensions: input as Dimensions} // , data: new Uint8ClampedArray(input[0] * input[1]).fill(0) }\n    : {mode, dimensions: Array(2).fill(input.length ** 0.5) as Dimensions}; // , data: input\n};\n\nexport const parseFilterRange = ({\n  lowBand = NaN,\n  highBand = NaN,\n  low = NaN,\n  high = NaN,\n  noLow,\n  noHigh,\n  sameBand,\n  size = Infinity,\n  radius = size ? diagonal(size) : NaN,\n}: FilterParameters = {}) => (\n  size > 0\n    ? ((sameBand = lowBand === highBand),\n      (noLow = sameBand || isNaN(lowBand) || lowBand <= 0),\n      (noHigh = sameBand || isNaN(highBand) || highBand >= radius),\n      (low = sameBand ? NaN : noLow ? ((lowBand = NaN), -radius) : lowBand ** 2),\n      (high = sameBand ? NaN : noHigh ? ((highBand = NaN), radius) : highBand ** 2))\n    : ((lowBand = highBand = low = high = size = radius = NaN), (noLow = false), (noHigh = false)),\n  {lowBand, highBand, sameBand, low, high, noLow, noHigh, size, radius}\n);\n\nexport declare function gaussian(x: number, mean: number, sigma: number): number;\n\nexport namespace gaussian {\n  export const twiddle = (2 * PI) ** 0.5;\n  export const gaussian = (χ: number, α: number, σ: number, δ = σ ** 2, ω = σ * twiddle) =>\n    exp(-((χ - α) ** 2) / (δ * 2)) / ω;\n}\n(gaussian as any) = Object.assign(gaussian.gaussian, gaussian);\n\nconst rectBandFilter = (d, low, high): number => d > low - 0.5 && ((d < high + 0.5) as any); // (d) => d > low && d < high;\n\nconst multiplyFilters = (...filters: Float32Array[]) =>\n  filters.length === 1\n    ? filters[0]\n    : filters.reduce((result, filter) => {\n        length = result && result.length > 0 && filter && filter.length > 0 && min(result.length, filter.length);\n        for (let i = 0; i < length; i++) result[i] *= filter[i] || 0;\n        return result;\n      }, Float32Array.from(filters[0]));\n\nconst combineFilters = (...filters: Float32Array[]) =>\n  filters.reduce((result, filter) => {\n    length = result && result.length > 0 && filter && filter.length > 0 && min(result.length, filter.length);\n    for (let i = 0; i < length; i++) result[i] = min(1, result[i] + filter[i] || 0);\n    return result;\n  }, Float32Array.from(filters[0]));\n\nconst normalizeFilter = (\n  filter: Float32Array,\n  norm = filter.reduceRight((norm, v) => (v > norm ? v : norm), -Infinity),\n) => filter.map(v => v / norm);\n\nconst radialFilter = (ρ: number, ƒ: (x: number) => number) => new Float32Array(ρ).map((x, i) => ƒ(i)); // .fill(1);\n\nconst filters = new Map<string, any>();\n\nexport function filter(dimensions?: Dimensions | number, lowPass?: Band, highPass?: Band, options?: FilterOptions);\n\nexport function filter(data: Data<any>, lowPass?: Band, highPass?: Band, options?: FilterOptions);\n\nexport function filter(\n  input: number | Dimensions | Data<any>,\n  lowPass: Band = NaN,\n  highPass: Band = NaN,\n  {fill = 1, clear = 0}: FilterOptions = {},\n) {\n  const {mode, dimensions} = parseFilterInput(input),\n    isRender = mode === 'render',\n    isFilter = mode === 'filter';\n  const [M, N] = dimensions,\n    M2 = M / 2,\n    N2 = N / 2,\n    MN = M * N; // I = Math.min(M, N); // D = (I ** 2 * 2) ** 0.5;\n\n  const {\n    low: lowSquare,\n    high: highSquare,\n    noLow,\n    noHigh,\n    sameBand,\n    size,\n    radius,\n    size: I,\n    radius: D,\n  } = parseFilterRange({lowBand: lowPass, highBand: highPass, size: min(M, N)});\n  const low = (lowSquare && lowSquare ** 0.5) || 0,\n    high = (highSquare && highSquare ** 0.5) || radius;\n  const hasHigh = high !== radius,\n    hasLow = low !== 0,\n    hasBand = hasHigh || hasHigh;\n\n  const id = hasBand && `${I} ${low}:${high}`;\n  if (id && filters.has(id)) return filters.get(id);\n\n  // New Filter Computations\n  const delta = min(high || radius, radius) - max(0, low || 0);\n  const variance = log2(4) * 2,\n    norm = variance ** 0.5 * gaussian.twiddle;\n\n  const turbomazeFilter = () => normalizeFilter(radialFilter(radius, i => rectBandFilter(i, low, high)));\n  const gaussianFilter = () =>\n    normalizeFilter(\n      multiplyFilters(\n        radialFilter(radius, i => exp(-((i >= high ? i - high : i <= low ? i - low : 0) ** 2) / variance / 2)),\n        // radialFilter(radius, (i) => rectBandFilter(i, low - variance, high + variance)),\n      ),\n    );\n  const filter = [turbomazeFilter, gaussianFilter][1]();\n  // console.log({ filter });\n  const N0 = Math.max(0, floor((N - highSquare) / 2)),\n    M0 = Math.max(0, floor((N - highSquare) / 2));\n  // const N0 = 0, M0 = 0;\n\n  // if (isRender) {\n  const data = new Float32Array(M * N);\n  let zeros = true,\n    ones = false;\n  if (sameBand || !hasBand) data.fill(fill), (zeros = true), (ones = false);\n  else {\n    // if (hasBand)\n    for (let k = N0, t, b, dm; ((t = k * M), (b = MN - t), (dm = imul(k - M2, k - M2))), k <= N2; k++)\n      for (\n        let l = M0, r, d, i;\n        ((r = M - l), (d = dm + imul(l - N2, l - N2)), (i = (d > 1 && round(d ** 0.5)) || 0)), l <= M2;\n        l++\n      )\n        data[t + l] = data[t + r] = data[b + l] = data[b + r] = filter[i] || 0;\n    // const v = fill;\n    // for (let k = N0, d, df, dl, dh, dv; k <= N2; k++) {\n    //     const t = k * M, b = MN - t, dM = imul(k - M2, k - M2); // (k - M2) ** 2;\n    //     for (let l = M0, i, r = M - l; l <= M2; r = M - l++) {\n    //         d = dM + imul(l - N2, l - N2), i = round(d ** 0.5); // dM + (l - N2) ** 2;\n    //         data[t + l] = data[t + r] = data[b + l] = data[b + r] = filter[i] || 0;\n    //         // data[t + l] = data[b + r] = gaussianFilter[i] || 0, data[t + r] = data[b + l] = rectFilter[i] || 0;\n    //         // test(d) && (data[t + l] = data[t + r] = data[b + l] = data[b + r] = v);\n    //     }\n    // }\n  }\n  (data['zeros'] = data.includes(0)), (data['ones'] = data.includes(1));\n  filters.set(id, data);\n  return data;\n  // } else {\n  //     // data = input as Data<any>;\n  //     // const apply = typeof data[0] === 'number' ?\n  //     //     (idx) => { data[idx] = clear; } :\n  //     //     (idx) => { data[idx].real = clear, data[idx].imag = clear; };\n  //     // for (let k = N0; k < N; k++) {\n  //     //     // const i0 = k * M, i1 = N - i0, d0 = (k - M2) ** 2;\n  //     //     const t = k * M, b = MN - t, dM = (k - M2) ** 2;\n  //     //     for (let l = M0, r = M - l; l <= M2; r = M - l++)\n  //     //         test(dM + ((l - N2) ** 2)) && (apply(t + l), apply(t + r), apply(b + l), apply(b + r));\n  //     // }\n  // }\n\n  // return mode === 'render' ? data as Uint8ClampedArray : data as ComplexData;\n}\n\nexport default filter;\n"],"names":[],"mappings":"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"}