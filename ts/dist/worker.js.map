{"version":3,"file":"worker.js","sources":["../src/worker.ts"],"sourcesContent":["/// <reference path='./types/types.d.ts' />\n// tslint:disable:no-bitwise prefer-object-spread\n\nnamespace FFT {\n  var SharedArrayBuffer = typeof SharedArrayBuffer === 'undefined' ? ArrayBuffer : SharedArrayBuffer; // tslint:disable-line:prefer-const no-var-keyword\n  declare var ImageBitmap: new (\n    image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob,\n    ...args: any[]\n  ) => ImageBitmap;\n\n  export const transferableTypes = [\n    ...(typeof ArrayBuffer !== 'undefined' ? [ArrayBuffer] : []),\n    ...(typeof MessagePort !== 'undefined' ? [MessagePort] : []),\n    ...(typeof ImageBitmap !== 'undefined' ? [ImageBitmap] : []),\n  ];\n\n  export const transferables = <T extends object>(...objects: T[]) =>\n    objects.filter(\n      object => object && typeof object === 'object' && transferableTypes.find(type => object instanceof type),\n    );\n\n  const debugging = false;\n\n  /* MATH */\n  const {sin, cos, PI, abs, pow, hypot, imul} = Math,\n    PI2 = 2 * PI,\n    PI64 = 64 * PI;\n\n  const trunc: (value: number) => number = v => ~~(1 * v);\n\n  const floor: (value: number) => number = (v, t = trunc(v)) => (v === t ? t : v >= t ? t : t - 1);\n\n  const ceil: (value: number) => number = (v, f = floor(v)) => (v >= 0 ? f + 1 : f >= v ? f : f + 1);\n\n  const round: (value: number) => number = (v, t = trunc(v)) =>\n    v === t ? t : v >= 0 ? (v - t < 0.5 ? t : t + 1) : t - v < 0.5 ? t : t - 1;\n\n  const mround: (value: number, multiple: number) => number = (v, m, t = trunc(v * m) / m) =>\n    v === t ? t : v >= 0 ? (v - t < 0.5 ? t : t + 1) : t - v < 0.5 ? t : t - 1;\n\n  const diagonal = (a, b = a) => ceil(hypot(a, b));\n\n  const now =\n    typeof performance !== 'undefined' && performance.now ? performance.now.bind(performance) : Date.now.bind(Date);\n\n  /* TWIDDLE: e^ix = cos x + i*sin x */\n  namespace cisTables {\n    const {PI, abs, sin, cos, sqrt, max} = Math; // const abs = (value: number) => value * ((value >= 0 || -1) as number);\n\n    const Base = Float32Array;\n\n    /**\n     * CIS Lookup Table for s₏ sin(2πn/N) and c₏ for cos(2πn/N) terms, where N\n     * is a base-2 single-term safe unsigned integer (2ⁿ) passed as the first\n     * constructor argument for the table.\n     *\n     * @see https://en.wikipedia.org/wiki/Trigonometric_tables\n     */\n    export class CISTable extends (Base as typeof Base) {\n      // private n: number; private n2: number; private n4: number; private n8: number;\n\n      n: [number, number, number, number];\n\n      constructor(public size: number) {\n        super(new SharedArrayBuffer(Base.BYTES_PER_ELEMENT * (size * 1.25)));\n\n        const [n, n2, n4, n8] = (this.n = [size, size >> 1, size >> 2, size >> 3]);\n\n        const t = sin(PI / n),\n          c0 = (this[n4] = 1),\n          s0 = (this[0] = 0),\n          n2p4 = n2 + n4;\n\n        const dc0 = 2 * t ** 2,\n          ds0 = max((2 - dc0) * dc0) ** 0.5,\n          t0 = 2 * dc0;\n\n        for (\n          let i = 1, [dc, ds, t, c, s] = [dc0, ds0, t0, c0, s0];\n          i < n8;\n          i++ // dc = dc0, ds = ds0, t = t0, c = c0, s = s0; // c -= dc, dc += t * c, s += ds, ds -= t * s,\n        )\n          (this[i] = s += ds), (ds -= t * s), (this[n4 - i] = c -= dc), (dc += t * c); // c -= dc, dc += t * c, s += ds, ds -= t * s, this[i] = s, this[n4 - i] = c;\n\n        if (n8 !== 0) this[n8] = 0.5 ** 0.5; // ** 0.5;\n\n        for (let j = 0; j < n4; j++) this[n2 - j] = this[j]; // lim = n4\n        for (let k = 0; k < n2p4; k++) this[n2 + k] = -this[k]; // lim = n2 + n4\n      }\n    }\n    const tables = new Map<number, CISTable>();\n\n    export const get = (size: number) => (!tables.has(size) && tables.set(size, new CISTable(size)), tables.get(size));\n  }\n  declare function cisTables(size: number): cisTables.CISTable;\n\n  (cisTables as any) = Object.assign(cisTables.get, cisTables);\n\n  /* ITERATION */\n  // let lastIterator: FFTIteration & FFTIteration[];\n\n  const compare = (a: any, b: any, keys: string[]) =>\n    typeof a === typeof b && (!a || keys.every(key => a[key] === b[key]));\n\n  const defaultIteration = {start: 0, offset: 0, size: 0, step: 1};\n\n  const iterationKeys = Object.keys(defaultIteration);\n\n  declare function iterate(\n    iteration: FFTIteration,\n    callback: (size: number, start: number, offset: number) => boolean,\n  ): boolean;\n\n  type Iteration = [number, number, number];\n\n  namespace iterate {\n    // export function generator(size: number, start: number, offset: number, step: number, iterations: Iteration[]): Iteration[];\n\n    // export function generator(size?: number, start?: number, offset?: number, step?: number): IterableIterator<Iteration>;\n\n    export function* generator(size = 0, start = 0, offset = 0, step = 1, iterations?: Iteration[]) {\n      // : IterableIterator<Iteration> | Iteration[]\n      const yields = !iterations,\n        nextSize = size >> 1,\n        nextStep = step << 1,\n        nextStart = start + nextSize,\n        nextOffset = offset + step; // tslint:disable-line:no-bitwise\n      iterations = iterations || [];\n\n      size > 1 &&\n        (generator(nextSize, start, offset, nextStep, iterations).next(),\n        generator(nextSize, nextStart, nextOffset, nextStep, iterations).next());\n\n      size >= 1 && (iterations.push([size, start, offset]), yields && (yield* iterations));\n    }\n    const iterators = new Map<number, Iteration[]>();\n\n    export function generate(size = 0, start = 0, offset = 0, step = 1): Iteration[] {\n      let iterations: Iteration[];\n\n      if (!start && !offset && step === 1) {\n        if (iterators.has(size)) return iterators.get(size);\n\n        const started = now();\n\n        generator(size, start, offset, step, (iterations = [])).next();\n\n        const ended = now(),\n          elapsed = ended - started;\n\n        debugging &&\n          setTimeout(\n            () =>\n              console.info(`FFT: ▷ ${(size ** 0.5).toFixed(0)}² × ${iterations.length} ops / ${elapsed.toFixed(1)}ms`),\n            0,\n          );\n\n        iterators.set(size, iterations);\n      } else {\n        iterations = Array.from(generator(size, start, offset, step));\n      }\n      return iterations;\n    }\n    export function iterate(\n      {start = 0, offset = 0, size = 0, step = 1, remaining = true, completed = 0}: FFTIteration,\n      callback: (size?: number, start?: number, offset?: number) => boolean,\n    ): Iteration[] {\n      const iterations = (!start && !offset && step === 1 && iterators.get(size)) || generate(size); // FFTIteration[];\n\n      let i;\n\n      const length = iterations.length,\n        started = now();\n\n      for (i = 0; i < length && callback(...iterations[i]) !== false; i++); // for (const iteration of iterations) if (/* iteration.remaining = remaining--, */ apply(iteration) === false) break;\n\n      const ended = now(),\n        elapsed = ended - started,\n        operations = i,\n        aborted = i < length - 1;\n\n      debugging &&\n        setTimeout(\n          () =>\n            console[aborted ? 'warn' : 'info'](\n              `FFT: ▶︎ ${(size ** 0.5).toFixed(0)}² × ${(operations / 1000).toFixed(1)}k ops / ${elapsed.toFixed(1)}ms`,\n            ),\n          0,\n        );\n\n      return iterations;\n    }\n  }\n\n  (iterate as any) = Object.assign(iterate.iterate, iterate);\n\n  export declare interface Operation {\n    uid?: any;\n\n    aborted?: boolean;\n  }\n  export declare interface Operations {\n    [name: string]: Operation;\n  }\n  const operations: Operations = {};\n\n  // export function transform($in: TypedArray, $out: Float32Array | Float64Array, direction: 'forward' | 'inverse', operation: { abort?: boolean } = {}): boolean {\n  /**\n   * Fourier Transform/Inverse Pairs:\n   *  Given   f(x) <=> F(u)\n   *      let     F(u) = ∫ f(x) * e ** -j2πux dx;\n   *\n   *              f(x) = ∫ F(u) * e ** j2πux du;\n   *\n   *      where   x = -∞ … ∞ in the 1D spatial coordinates domain\n   *              u = -∞ … ∞ in the respective spatial frequency domain\n   *              j = √-1\n   *\n   *  Given   f(x,y) <=> F(u,v)\n   *      let     F(u,v) = ∫∫ f(x,y) * e ** -j2π(ux+vy) dx dy;\n   *\n   *              f(x,y) = ∫∫ F(u,v) * e ** j2π(ux+vy)  du dv;\n   *\n   *      where   x & y = -∞ … ∞ in orthogonal 2D spatial coordinates domains\n   *              u & v = -∞ … ∞ in the respective spatial frequency domains\n   *\n   * @see http://www.csc.kth.se/utbildning/kth/kurser/DD2422/bildat08/report_FFT.pdf\n   * @see http://www.robots.ox.ac.uk/~az/lectures/ia/lect2.pdf\n   */\n  export function transform(\n    $in: TypedArray,\n    $out: TypedArray,\n    direction: 'forward' | 'inverse',\n    operation: Operation = {aborted: false},\n  ): boolean {\n    const forward = direction === 'forward',\n      sign = forward ? 1 : -1,\n      PIt = PI2;\n\n    const validData = $in && $in.length > 0 && $out && $out.length > 0;\n\n    const fromReal = validData && $in.length === $out.length / 2,\n      fromComplex = validData && $in.length === $out.length;\n\n    const size = fromReal ? $in.length : fromComplex ? $in.length / 2 : 0;\n\n    const cis = cisTables(size),\n      [n, n2, n4, n8] = cis.n;\n\n    if (!size || !(validData && (fromReal || fromComplex))) return false;\n\n    const integrate: (size: number, start: number, offset: number) => boolean = (size, start, offset) => {\n      const length = size / 2,\n        end = start + length,\n        d = n / size; // const twiddle = PIt / size;\n\n      // Cooley-Tukey decimation-in-time radix-2 FFT\n      for (\n        let k = start, h = 0, k1, k2, r1, i1, r2, i2, rt, it, rk, ik;\n        ((k1 = imul(k, 2)),\n        (k2 = imul(k + length, 2)),\n        (r1 = $out[k1]),\n        (i1 = $out[k1 + 1]),\n        (r2 = $out[k2]),\n        (i2 = $out[k2 + 1]),\n        (rt = cis[h + n4]),\n        (it = sign * cis[h]),\n        (rk = (r2 || i2) && r2 * rt + i2 * it),\n        (ik = (r2 || i2) && -r2 * it + i2 * rt)),\n          k < end;\n        k++, h += d\n      )\n        ($out[k1] += rk), ($out[k1 + 1] += ik), ($out[k2] = r1 - rk), ($out[k2 + 1] = i1 - ik);\n\n      return true;\n    };\n\n    const translate: (start: number, offset: number) => boolean = fromReal\n      ? (start, offset) => (($out[start * 2] = $in[offset] || 0), ($out[start * 2 + 1] = 0), true)\n      : fromComplex\n      ? (start, offset) => (\n          ($out[start * 2] = $in[offset * 2] || 0), ($out[start * 2 + 1] = $in[offset * 2 + 1] || 0), true\n        )\n      : (start, offset) => false;\n\n    const aggregate = (size, start, offset) =>\n      !operation.aborted && (size === 1 ? translate(start, offset) : size > 1 ? integrate(size, start, offset) : false);\n\n    return iterate({size}, aggregate), true;\n  }\n\n  declare const globalThis: Worker;\n\n  if ('onmessage' in globalThis) {\n    globalThis.onmessage = (\n      event: MessageEvent & {\n        data: {\n          action?: string;\n          input?: TypedData<RealData | ComplexData>;\n          output?: TypedData<MutableData<RealData | ComplexData>>;\n          buffer?;\n          uid?;\n        };\n      },\n    ) => {\n      // tslint:disable-next-line:prefer-const\n      const {data = {} as any} = event;\n\n      if (data.action === 'forward' || data.action === 'inverse') {\n        const {\n          action: direction,\n          input,\n          output = direction === 'inverse'\n            ? new Float32Array(new SharedArrayBuffer(input.length * 4))\n            : new Float32Array(new SharedArrayBuffer(input.length * 4 * 2)),\n        } = data;\n\n        if (data.action === 'forward') for (const _uid in operations) operations[_uid].aborted = true;\n\n        const operation = {uid: data.uid, aborted: false};\n\n        operations[data.uid] = operation;\n\n        const done = transform(input, output, direction, operation);\n\n        delete operations[data.uid];\n\n        const reply = {uid: data.uid, input, output, done};\n\n        globalThis.postMessage(reply, transferables(input.buffer, output.buffer));\n      } else if (data.action === 'preGenerate') {\n        if (data.size > 0) iterate.generate(data.size as number);\n      } else if (data.action === 'abort') {\n        if (data.uid in operations) (operations[data.uid].aborted = true), delete operations[data.uid];\n      } else {\n        console.error(`Unsupported operation`, event);\n      }\n    };\n  }\n}\n"],"names":[],"mappings":";AAGA,IAAU,GAAG,CAgVZ;AAhVD,WAAU,GAAG;IACX,IAAI,iBAAiB,GAAG,OAAO,iBAAiB,KAAK,WAAW,GAAG,WAAW,GAAG,iBAAiB,CAAC;IAMtF,qBAAiB,GAAG;QAC/B,IAAI,OAAO,WAAW,KAAK,WAAW,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5D,IAAI,OAAO,WAAW,KAAK,WAAW,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC5D,IAAI,OAAO,WAAW,KAAK,WAAW,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;KAC7D,CAAC;IAEW,iBAAa,GAAG,CAAmB,GAAG,OAAY,KAC7D,OAAO,CAAC,MAAM,CACZ,MAAM,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,IAAA,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,YAAY,IAAI,CAAC,CACzG,CAAC;UAKE,EAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAC,GAAG,IAAI,CAEjC;IAgBjB,MAAM,GAAG,GACP,OAAO,WAAW,KAAK,WAAW,IAAI,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAGlH,IAAU,SAAS,CA+ClB;IA/CD,WAAU,SAAS;QACjB,MAAM,EAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAC,GAAG,IAAI,CAAC;QAE5C,MAAM,IAAI,GAAG,YAAY,CAAC;QAS1B,MAAa,QAAS,SAAS,IAAoB;YAKjD,YAAmB,IAAY;gBAC7B,KAAK,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBADpD,SAAI,GAAJ,IAAI,CAAQ;gBAG7B,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBAE3E,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,EACnB,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EACnB,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAClB,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;gBAEjB,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EACpB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,EACjC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;gBAEf,KACE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACrD,CAAC,GAAG,EAAE,EACN,CAAC,EAAE;oBAEH,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE9E,IAAI,EAAE,KAAK,CAAC;oBAAE,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;gBAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;oBAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;oBAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;QA/BY,kBAAQ,WA+BpB,CAAA;QACD,MAAM,MAAM,GAAG,IAAI,GAAG,EAAoB,CAAC;QAE9B,aAAG,GAAG,CAAC,IAAY,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KACpH,EA/CS,SAAS,KAAT,SAAS,QA+ClB;IAGA,SAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAmB7D,IAAU,OAAO,CA6EhB;IA7ED,WAAU,SAAO;QAKf,UAAiB,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,UAAwB;YAE5F,MAAM,MAAM,GAAG,CAAC,UAAU,EACxB,QAAQ,GAAG,IAAI,IAAI,CAAC,EACpB,QAAQ,GAAG,IAAI,IAAI,CAAC,EACpB,SAAS,GAAG,KAAK,GAAG,QAAQ,EAC5B,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC;YAC7B,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;YAE9B,IAAI,GAAG,CAAC;iBACL,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE;oBAChE,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAE3E,IAAI,IAAI,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,KAAK,OAAO,UAAU,CAAC,CAAC,CAAC;SACtF;QAdgB,mBAAS,YAczB,CAAA;QACD,MAAM,SAAS,GAAG,IAAI,GAAG,EAAuB,CAAC;QAEjD,SAAgB,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;YAChE,IAAI,UAAuB,CAAC;YAE5B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;gBACnC,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;oBAAE,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAEpD,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC;gBAEtB,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,UAAU,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;sBAEzD,KAAK,GAAG,GAAG,EAAE,CACS;gBAS5B,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;aACjC;iBAAM;gBACL,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;aAC/D;YACD,OAAO,UAAU,CAAC;SACnB;QAzBe,kBAAQ,WAyBvB,CAAA;QACD,SAAgB,OAAO,CACrB,EAAC,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,EAAE,SAAS,GAAG,CAAC,EAAe,EAC1F,QAAqE;YAErE,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC;YAE9F,IAAI,CAAC,CAAC;YAEN,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,EAC9B,OAAO,GAAG,GAAG,EAAE,CAAC;YAElB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;gBAAC,CAAC;kBAE/D,KAAK,GAAG,GAAG,EAAE,CAGQ;YAW3B,OAAO,UAAU,CAAC;SACnB;QA5Be,iBAAO,UA4BtB,CAAA;KACF,EA7ES,OAAO,KAAP,OAAO,QA6EhB;IAEA,OAAe,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAU3D,MAAM,UAAU,GAAe,EAAE,CAAC;IAyBlC,SAAgB,SAAS,CACvB,GAAe,EACf,IAAgB,EAChB,SAAgC,EAChC,YAAuB,EAAC,OAAO,EAAE,KAAK,EAAC;cAEjC,OAAO,GAAG,SAAS,KAAK,SAAS,EACrC,IAAI,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CACb;QAEZ,MAAM,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEnE,MAAM,QAAQ,GAAG,SAAS,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAC1D,WAAW,GAAG,SAAS,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC;QAExD,MAAM,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAEtE,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAE1B,IAAI,CAAC,IAAI,IAAI,EAAE,SAAS,KAAK,QAAQ,IAAI,WAAW,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAErE,MAAM,SAAS,GAA6D,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM;YAC9F,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,EACrB,GAAG,GAAG,KAAK,GAAG,MAAM,EACpB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAGf,KACE,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC5D,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;iBAChB,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;iBACxB,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;iBACb,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBACjB,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;iBACb,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBACjB,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;iBAChB,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;iBAClB,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;iBACpC,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACrC,CAAC,GAAG,GAAG,EACT,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;gBAEX,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAEzF,OAAO,IAAI,CAAC;SACb,CAAC;QAEF,MAAM,SAAS,GAA+C,QAAQ;cAClE,CAAC,KAAK,EAAE,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;cAC1F,WAAW;kBACX,CAAC,KAAK,EAAE,MAAM,MACZ,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CACjG;kBACD,CAAC,KAAK,EAAE,MAAM,KAAK,KAAK,CAAC;QAE7B,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,KACpC,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,KAAa,CAAC,GAAG,KAAK,CAAC,CAAC;QAEpH,OAAO,OAAO,CAAC,EAAC,IAAI,EAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC;KACzC;IA5De,aAAS,YA4DxB,CAAA;IAID,IAAI,WAAW,IAAI,UAAU,EAAE;QAC7B,UAAU,CAAC,SAAS,GAAG,CACrB,KAQC;YAGD,MAAM,EAAC,IAAI,GAAG,EAAS,EAAC,GAAG,KAAK,CAAC;YAEjC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC1D,MAAM,EACJ,MAAM,EAAE,SAAS,EACjB,KAAK,EACL,MAAM,GAAG,SAAS,KAAK,SAAS;sBAC5B,IAAI,YAAY,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;sBACzD,IAAI,YAAY,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAClE,GAAG,IAAI,CAAC;gBAET,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;oBAAE,KAAK,MAAM,IAAI,IAAI,UAAU;wBAAE,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;gBAE9F,MAAM,SAAS,GAAG,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;gBAElD,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;gBAEjC,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAE5D,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAE5B,MAAM,KAAK,GAAG,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;gBAEnD,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,IAAA,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aAC3E;iBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,aAAa,EAAE;gBACxC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;oBAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAc,CAAC,CAAC;aAC1D;iBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;gBAClC,IAAI,IAAI,CAAC,GAAG,IAAI,UAAU;oBAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,GAAG,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChG;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;AACH,CAAC,EAhVS,GAAG,KAAH,GAAG"}